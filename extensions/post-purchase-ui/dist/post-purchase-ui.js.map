{
  "version": 3,
  "sources": ["../../../node_modules/@remote-ui/core/build/esm/component.mjs", "../../../node_modules/@remote-ui/core/build/esm/index.mjs", "../../../node_modules/@remote-ui/core/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/BlockStack/BlockStack.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/BlockStack/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Button/Button.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Button/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/CalloutBanner/CalloutBanner.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/CalloutBanner/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Heading/Heading.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Heading/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Image/Image.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Image/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Layout/Layout.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/Layout/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/TextBlock/TextBlock.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/TextBlock/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/TextContainer/TextContainer.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/TextContainer/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/View/View.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/View/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/components/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/extend.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/build/esm/index.mjs", "../../../node_modules/@shopify/post-purchase-ui-extensions/index.mjs", "../src/index.js", "<stdin>"],
  "sourceRoot": "/home/ubuntu/Shopify-App/shopify-extentions-live/bombayshirts-india-prod/extensions/post-purchase-ui/src",
  "sourcesContent": ["function createRemoteComponent(componentType) {\n  return componentType;\n}\n\nexport { createRemoteComponent };\n", "export { release, retain } from '@remote-ui/rpc';\nexport { createRemoteComponent } from './component.mjs';\nexport { ACTION_INSERT_CHILD, ACTION_MOUNT, ACTION_REMOVE_CHILD, ACTION_UPDATE_PROPS, ACTION_UPDATE_TEXT, KIND_COMPONENT, KIND_FRAGMENT, KIND_ROOT, KIND_TEXT } from './types.mjs';\nexport { createRemoteRoot } from './root.mjs';\nexport { createRemoteChannel, createRemoteReceiver, isRemoteFragmentSerialization, isRemoteReceiverAttachableFragment } from './receiver.mjs';\nexport { isRemoteComponent, isRemoteFragment, isRemoteText } from './utilities.mjs';\n", "export * from \"./build/esm/index.mjs\";", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * BlockStack is used to vertically stack elements\n */\nexport var BlockStack = createRemoteComponent('BlockStack');", "export { BlockStack } from './BlockStack';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * Button is used primarily for actions, such as \u201CContinue\u201D, \u201CApply\u201D, or \u201CPay\u201D.\n */\nexport var Button = createRemoteComponent('Button');", "export { Button } from './Button';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * CalloutBanner is used to inform buyers about the details of a limited\n * time offer. They differ from Banner which is used to report status.\n */\nexport var CalloutBanner = createRemoteComponent('CalloutBanner');", "export { CalloutBanner } from './CalloutBanner';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * Headings are used as the titles of each major section of the checkout. Unlike HTML\n * headings, you do not explicitly specify the position of the heading in the document\n * outline. Instead, use headings nested in heading groups to create a document structure\n * that accessibility technologies can use to speed up navigation.\n */\nexport var Heading = createRemoteComponent('Heading');", "export { Heading } from './Heading';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * Image is used for large format, responsive images. For small images use Thumbnail.\n */\nexport var Image = createRemoteComponent('Image');", "export { Image } from './Image';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * Layout is used to create macro layouts that responds to different media sizes.\n */\nexport var Layout = createRemoteComponent('Layout');", "export { Layout } from './Layout';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * TextBlock is used to render a block of text that occupies the full width available.\n * Usually used to render paragraphs or text.\n */\nexport var TextBlock = createRemoteComponent('TextBlock');", "export { TextBlock } from './TextBlock';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * TextContainer is used to wrap text elements such as TextBlock and Heading, and provide\n * consistent vertical spacing.\n */\nexport var TextContainer = createRemoteComponent('TextContainer');", "export { TextContainer } from './TextContainer';", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * A View is a generic container component. Its contents will always be their\n * \u201Cnatural\u201D size, so this component can be useful in layout components (like `Layout`, `Tiles`,\n * `BlockStack`, `InlineStack`) that would otherwise stretch their children to fit.\n */\nexport var View = createRemoteComponent('View');", "export { View } from './View';", "export { Banner } from './Banner';\nexport { BlockStack } from './BlockStack';\nexport { Bookend } from './Bookend';\nexport { Button } from './Button';\nexport { ButtonGroup } from './ButtonGroup';\nexport { BuyerConsent } from './BuyerConsent';\nexport { CalloutBanner } from './CalloutBanner';\nexport { Checkbox } from './Checkbox';\nexport { Form } from './Form';\nexport { FormLayout, FormLayoutGroup } from './FormLayout';\nexport { Heading } from './Heading';\nexport { HeadingGroup } from './HeadingGroup';\nexport { HiddenForAccessibility } from './HiddenForAccessibility';\nexport { Image } from './Image';\nexport { InlineStack } from './InlineStack';\nexport { Layout } from './Layout';\nexport { Link } from './Link';\nexport { Radio } from './Radio';\nexport { Select } from './Select';\nexport { Separator } from './Separator';\nexport { Spinner } from './Spinner';\nexport { Text } from './Text';\nexport { TextBlock } from './TextBlock';\nexport { TextContainer } from './TextContainer';\nexport { TextField } from './TextField';\nexport { Tiles } from './Tiles';\nexport { View } from './View';\nexport { VisuallyHidden } from './VisuallyHidden';", "export var extend = function extend() {\n  var _self$shopify;\n\n  return (_self$shopify = self.shopify).extend.apply(_self$shopify, arguments);\n};", "export * from './components';\nexport { extend } from './extend';", "export * from \"./build/esm/index\";", "/**\n * Extend Shopify Checkout with a custom Post Purchase user experience This\n * Shopify Checkout template provides two extension points:\n *  1. ShouldRender - Called first, during the checkout process.\n *  2. Render - If requested by `ShouldRender`, will be rendered after checkout\n *     completes\n */\nimport {\n  extend,\n  BlockStack,\n  Button,\n  Heading,\n  Image,\n  Layout,\n  TextBlock,\n  TextContainer,\n  CalloutBanner,\n  View,\n} from \"@shopify/post-purchase-ui-extensions\";\n\n/**\n * Entry point for the `ShouldRender` Extension Point.\n *\n * Returns a value indicating whether or not to render a PostPurchase step, and\n * optionally allows data to be stored on the client for use in the `Render`\n * extension point.\n */\n extend(\"Checkout::PostPurchase::ShouldRender\", async ({ storage }) => {\n  const initialState = await getRenderData();\n  const render = true;\n\n  if (render) {\n    // Saves initial state, provided to `Render` via `storage.initialData`\n    await storage.update(initialState);\n  }\n\n  return {\n    render,\n  };\n});\n\n// Simulate results of network call, etc.\nasync function getRenderData() {\n  return {\n    couldBe: \"anything\",\n  };\n}\n\n/**\n * Entry point for the `Render` Extension Point\n *\n * Returns markup composed of remote UI components.  The Render extension can\n * optionally make use of data stored during `ShouldRender` extension point to\n * expedite time-to-first-meaningful-paint.\n */\nextend(\n  \"Checkout::PostPurchase::Render\",\n  (root, { extensionPoint, storage }) => {\n    const initialState = storage.initialData;\n\n    root.appendChild(\n      root.createComponent(BlockStack, { spacing: \"loose\" }, [\n        root.createComponent(\n          CalloutBanner,\n          { title: \"Post-purchase extension template\" },\n          \"Use this template as a starting point to build a great post-purchase extension.\"\n        ),\n        root.createComponent(\n          Layout,\n          {\n            maxInlineSize: 0.95,\n            media: [\n              { viewportSize: \"small\", sizes: [1, 30, 1] },\n              { viewportSize: \"medium\", sizes: [300, 30, 0.5] },\n              { viewportSize: \"large\", sizes: [400, 30, 0.33] },\n            ],\n          },\n          [\n            root.createComponent(View, {}, [\n              root.createComponent(Image, {\n                source:\n                  \"https://cdn.shopify.com/static/images/examples/img-placeholder-1120x1120.png\",\n              }),\n            ]),\n            root.createComponent(View),\n            root.createComponent(BlockStack, { spacing: \"xloose\" }, [\n              root.createComponent(TextContainer, {}, [\n                root.createComponent(Heading, {}, \"Post-purchase extension\"),\n                root.createComponent(\n                  TextBlock,\n                  {},\n                  \"Here you can cross-sell other products, request a product review based on a previous purchase, and much more.\"\n                ),\n              ]),\n              root.createComponent(\n                Button,\n                {\n                  submit: true,\n                  onPress: () => {\n                    // eslint-disable-next-line\n                    console.log(\n                      `Extension point ${extensionPoint}`,\n                      initialState\n                    );\n                  },\n                },\n                \"Primary button\"\n              ),\n            ]),\n          ]\n        ),\n      ])\n    );\n\n    root.mount();\n  }\n);", "import './src/index.js';"],
  "mappings": "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",
  "names": ["init_BlockStack", "init_Button", "init_CalloutBanner", "init_Heading", "init_Image", "init_Layout", "init_TextBlock", "init_TextContainer", "init_View", "init_BlockStack", "init_Button", "init_CalloutBanner", "init_Heading", "init_Image", "init_Layout", "init_TextBlock", "init_TextContainer", "init_View", "extend", "init_esm", "init_esm"]
}
